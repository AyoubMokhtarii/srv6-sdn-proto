syntax = "proto3";

//import "srv6_sdn_proto/interface.proto";
import "srv6_sdn_proto/status_codes.proto";

/* RPC methods implementing a northbound interface for device management */

service InventoryService {
    // Configure device
    rpc ConfigureDevice(ConfigureDeviceRequest) returns (InventoryServiceReply) {}
    // Get devices information
    rpc GetDeviceInformation(InventoryServiceRequest) returns (InventoryServiceReply) {}
    // Get topology information
    rpc GetTopologyInformation(InventoryServiceRequest) returns (InventoryServiceReply) {}
    // Get overlays
    rpc GetOverlayInformation (InventoryServiceRequest) returns (InventoryServiceReply) {}
    // Configure Tenant 
    rpc ConfigureTenant(Tenant) returns (TenantReply) {}
    // Remove Tenant
    rpc RemoveTenant(RemoveTenantRequest) returns (InventoryServiceReply) {}
}

/* Request message carrying the device configuration */
message ConfigureDeviceRequest {
    DeviceInformation configuration = 1;
}

/* Request message carrying the device information */
message InventoryServiceRequest {
    repeated string ids = 1;
}

/* Device information */
message DeviceInformation {
    repeated Router devices = 1;
}

/* Device information */
message Router {

    /* Interface */
    message Interface {
        string name = 1;
        string mac_addr = 2;
        repeated string ipv4_addrs = 3;
        repeated string ipv6_addrs = 4;
        repeated string ipv4_subnets = 5;
        repeated string ipv6_subnets = 6;
        repeated string ext_ipv4_addrs = 7;
        repeated string ext_ipv6_addrs = 8;
        string type = 9;
    }

    string id = 1;
    repeated Interface interfaces = 2;
    string loopbackip = 3;
    string loopbacknet = 4;
    string managementip = 5;
    string mgmtip = 6;
    string name = 7;
    string description = 8;
    string status = 9;
}

/* Link */
message Link {
    string l_router = 1;
    string r_router = 2;
}

/* Topology Information */
message TopologyInformation {
    repeated string routers = 1;
    repeated Link links = 2;
}

/* Slice */
message Slice {
  string routerid = 1;
  string interface_name = 2;
}

/* Overlay */
message Overlay {
  string id = 1;
  string name = 2;
  repeated Slice slices = 3;
  string type = 4;
  string mode = 5;
  uint32 tenantid = 6;
}

/* Overlay information */
message OverlayInformation {
    repeated Overlay overlays = 1;
}

/* Tenant */
message Tenant {
  uint32 port = 1;
  string info = 2;
}

/* Tenant Reply */
message TenantReply {
  StatusCode status = 1;
  string token = 2;
  uint32 tenantid = 3;
}

/* Remove Tenant */
message RemoveTenantRequest {
  string token = 1;
}

/* Reply message */
message InventoryServiceReply {
    StatusCode status = 1;
    DeviceInformation device_information = 2;
    TopologyInformation topology_information = 3;
    OverlayInformation overlay_information = 4;
}
